//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerFrame
{
    DirectionalLight gDirLight;         // Offset:    0, size:   64
    PointLight gPointLight;             // Offset:   64, size:   80
    SpotLight gSpotLight;               // Offset:  144, size:   96
    float3  gEyePosW;                   // Offset:  240, size:   12
}

cbuffer cbPerObject
{
    float4x4 gWorld;                    // Offset:    0, size:   64
    float4x4 gWorldInvTranspose;        // Offset:   64, size:   64
    float4x4 gWorldViewProj;            // Offset:  128, size:   64
    Material gMaterial;                 // Offset:  192, size:   64
}

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11 LightTech
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float4 Reflect;                // Offset:  240
                //
                //   } gMaterial;                       // Offset:  192 Size:    64 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_temps 4
                
                #line 43 "D:\Data\Books\Book IV\Code\Chapter 7\Lighting\FX\Lighting.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // vout<4:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // vout<5:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // vout<6:NaN:Inf>
                dp3 r2.x, v1.xyzx, cb0[4].xyzx  // vout<7:NaN:Inf>
                dp3 r2.y, v1.xyzx, cb0[5].xyzx  // vout<8:NaN:Inf>
                dp3 r2.z, v1.xyzx, cb0[6].xyzx  // vout<9:NaN:Inf>
                
                #line 47
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // vout<0:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // vout<1:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // vout<2:NaN:Inf>
                dp4 r3.w, r0.xyzw, cb0[11].xyzw  // vout<3:NaN:Inf>
                mov o0.xyzw, r3.xyzw  // VS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r1.xyzx  // VS<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r2.xyzx  // VS<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                ret 
                // Approximately 16 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerFrame
                // {
                //
                //   struct DirectionalLight
                //   {
                //       
                //       float4 Ambient;                // Offset:    0
                //       float4 Diffuse;                // Offset:   16
                //       float4 Specular;               // Offset:   32
                //       float3 Direction;              // Offset:   48
                //       float pad;                     // Offset:   60
                //
                //   } gDirLight;                       // Offset:    0 Size:    64
                //   
                //   struct PointLight
                //   {
                //       
                //       float4 Ambient;                // Offset:   64
                //       float4 Diffuse;                // Offset:   80
                //       float4 Specular;               // Offset:   96
                //       float3 Position;               // Offset:  112
                //       float Range;                   // Offset:  124
                //       float3 Att;                    // Offset:  128
                //       float pad;                     // Offset:  140
                //
                //   } gPointLight;                     // Offset:   64 Size:    80
                //   
                //   struct SpotLight
                //   {
                //       
                //       float4 Ambient;                // Offset:  144
                //       float4 Diffuse;                // Offset:  160
                //       float4 Specular;               // Offset:  176
                //       float3 Position;               // Offset:  192
                //       float Range;                   // Offset:  204
                //       float3 Direction;              // Offset:  208
                //       float Spot;                    // Offset:  220
                //       float3 Att;                    // Offset:  224
                //       float pad;                     // Offset:  236
                //
                //   } gSpotLight;                      // Offset:  144 Size:    96
                //   float3 gEyePosW;                   // Offset:  240 Size:    12
                //
                // }
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorld;                   // Offset:    0 Size:    64 [unused]
                //   float4x4 gWorldInvTranspose;       // Offset:   64 Size:    64 [unused]
                //   float4x4 gWorldViewProj;           // Offset:  128 Size:    64 [unused]
                //   
                //   struct Material
                //   {
                //       
                //       float4 Ambient;                // Offset:  192
                //       float4 Diffuse;                // Offset:  208
                //       float4 Specular;               // Offset:  224
                //       float4 Reflect;                // Offset:  240
                //
                //   } gMaterial;                       // Offset:  192 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerFrame                        cbuffer      NA          NA    0        1
                // cbPerObject                       cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_constantbuffer cb1[15], immediateIndexed
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 16
                
                #line 55 "D:\Data\Books\Book IV\Code\Chapter 7\Lighting\FX\Lighting.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // pin<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov r1.xyz, -v1.xyzx
                add r1.xyz, r1.xyzx, cb0[15].xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // toEyeW<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 67
                nop 
                mov r2.xyz, cb1[12].xyzx  // mat<0,1,2>
                mov r3.xyz, cb1[13].xyzx  // mat<4,5,6>
                mov r4.xyzw, cb1[14].xyzw  // mat<8,9,10,11>
                mov r5.xyz, cb0[0].xyzx  // L<0,1,2>
                mov r6.xyz, cb0[1].xyzx  // L<4,5,6>
                mov r7.xyz, cb0[2].xyzx  // L<8,9,10>
                mov r8.xyz, cb0[3].xyzx  // L<12,13,14>
                mov r0.xyz, r0.xyzx  // normal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // toEye<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 70 "LightHelper.fx"
                mov r8.xyz, -r8.xyzx  // lightVec<0,1,2>
                
                #line 73
                mul r5.xyz, r2.xyzx, r5.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 78
                dp3 r0.w, r8.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 82
                lt r1.w, l(0.000000), r0.w
                mov r8.xyz, -r8.xyzx
                dp3 r2.w, r8.xyzx, r0.xyzx
                add r2.w, r2.w, r2.w
                mov r2.w, -r2.w
                mul r9.xyz, r0.xyzx, r2.wwww
                add r8.xyz, r8.xyzx, r9.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r2.w, r8.xyzx, r1.xyzx
                max r2.w, r2.w, l(0.000000)
                log r2.w, r2.w
                mul r2.w, r2.w, r4.w
                exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                mul r8.xyz, r3.xyzx, r0.wwww
                mul r6.xyz, r6.xyzx, r8.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r8.xyz, r4.xyzx, r2.wwww
                mul r7.xyz, r7.xyzx, r8.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 82
                movc r6.xyz, r1.wwww, r6.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                movc r7.xyz, r1.wwww, r7.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 67 "D:\Data\Books\Book IV\Code\Chapter 7\Lighting\FX\Lighting.fx"
                mov r5.xyz, r5.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r6.xyz, r6.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r7.xyz, r7.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // ambient<0:Inf,1:Inf,2:Inf>
                add r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                nop 
                mov r8.xyz, cb0[4].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[5].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[6].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[7].xyzx  // L<12,13,14>
                mov r0.w, cb0[7].w  // L<15>
                mov r12.xyz, cb0[8].xyzx  // L<16,17,18>
                mov r13.xyz, v1.xyzx  // pos<0,1,2>
                
                #line 106 "LightHelper.fx"
                mov r13.xyz, -r13.xyzx
                add r11.xyz, r11.xyzx, r13.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 109
                dp3 r1.w, r11.xyzx, r11.xyzx
                sqrt r14.y, r1.w  // d<0:NaN:Inf>
                
                #line 112
                lt r0.w, r0.w, r14.y
                
                #line 116
                if_z r0.w
                  div r11.xyz, r11.xyzx, r14.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 119
                  mul r8.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 124
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 128
                  lt r1.w, l(0.000000), r0.w
                  mov r11.xyz, -r11.xyzx
                  dp3 r2.w, r11.xyzx, r0.xyzx
                  add r2.w, r2.w, r2.w
                  mov r2.w, -r2.w
                  mul r15.xyz, r0.xyzx, r2.wwww
                  add r11.xyz, r11.xyzx, r15.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r2.w, r11.xyzx, r1.xyzx
                  max r2.w, r2.w, l(0.000000)
                  log r2.w, r2.w
                  mul r2.w, r2.w, r4.w
                  exp r2.w, r2.w  // specFactor<0:NaN:Inf>
                  mul r11.xyz, r3.xyzx, r0.wwww
                  mul r9.xyz, r9.xyzx, r11.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r11.xyz, r4.xyzx, r2.wwww
                  mul r10.xyz, r10.xyzx, r11.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 128
                  movc r9.xyz, r1.wwww, r9.xyzx, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r10.xyz, r1.wwww, r10.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 138
                  mul r14.z, r14.y, r14.y
                  mov r14.x, l(1.000000)
                  dp3 r0.w, r12.xyzx, r14.xyzx
                  div r0.w, l(1.000000), r0.w  // att<0:NaN:Inf>
                  mul r9.xyz, r0.wwww, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r10.xyz, r0.wwww, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 116
                else 
                  mov r8.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r9.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r10.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 72 "D:\Data\Books\Book IV\Code\Chapter 7\Lighting\FX\Lighting.fx"
                mov r8.xyz, r8.xyzx  // A<0:Inf,1:Inf,2:Inf>
                mov r9.xyz, r9.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r10.xyz, r10.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r5.xyz, r5.xyzx, r8.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r6.xyz, r6.xyzx, r9.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r7.xyz, r7.xyzx, r10.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                nop 
                mov r8.xyz, cb0[9].xyzx  // L<0,1,2>
                mov r9.xyz, cb0[10].xyzx  // L<4,5,6>
                mov r10.xyz, cb0[11].xyzx  // L<8,9,10>
                mov r11.xyz, cb0[12].xyzx  // L<12,13,14>
                mov r12.xyz, cb0[13].xyzx  // L<16,17,18>
                mov r14.xyz, cb0[14].xyzx  // L<20,21,22>
                mov r0.w, cb0[12].w  // L<15>
                mov r1.w, cb0[13].w  // L<19>
                
                #line 158 "LightHelper.fx"
                add r11.xyz, r13.xyzx, r11.xyzx  // lightVec<0:Inf,1:Inf,2:Inf>
                
                #line 161
                dp3 r2.w, r11.xyzx, r11.xyzx
                sqrt r13.y, r2.w  // d<0:NaN:Inf>
                
                #line 164
                lt r0.w, r0.w, r13.y
                
                #line 168
                if_z r0.w
                  div r11.xyz, r11.xyzx, r13.yyyy  // lightVec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 171
                  mul r2.xyz, r2.xyzx, r8.xyzx  // ambient<0:Inf,1:Inf,2:Inf>
                
                #line 176
                  dp3 r0.w, r11.xyzx, r0.xyzx  // diffuseFactor<0:NaN:Inf>
                
                #line 180
                  lt r2.w, l(0.000000), r0.w
                  mov r8.xyz, -r11.xyzx
                  dp3 r3.w, r8.xyzx, r0.xyzx
                  add r3.w, r3.w, r3.w
                  mov r3.w, -r3.w
                  mul r0.xyz, r0.xyzx, r3.wwww
                  add r0.xyz, r8.xyzx, r0.xyzx  // v<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  dp3 r0.x, r0.xyzx, r1.xyzx
                  max r0.x, r0.x, l(0.000000)
                  log r0.x, r0.x
                  mul r0.x, r0.x, r4.w
                  exp r0.x, r0.x  // specFactor<0:NaN:Inf>
                  mul r0.yzw, r3.xxyz, r0.wwww
                  mul r0.yzw, r9.xxyz, r0.yyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r4.xyzx, r0.xxxx
                  mul r1.xyz, r10.xyzx, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 180
                  movc r0.xyz, r2.wwww, r0.yzwy, l(0,0,0,0)  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  movc r1.xyz, r2.wwww, r1.xyzx, l(0,0,0,0)  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 190
                  dp3 r0.w, r8.xyzx, r12.xyzx
                  max r0.w, r0.w, l(0.000000)
                  log r0.w, r0.w
                  mul r0.w, r0.w, r1.w
                  exp r0.w, r0.w  // spot<0:NaN:Inf>
                
                #line 193
                  mul r13.z, r13.y, r13.y
                  mov r13.x, l(1.000000)
                  dp3 r1.w, r14.xyzx, r13.xyzx
                  div r1.w, r0.w, r1.w  // att<0:NaN:Inf>
                  mul r2.xyz, r0.wwww, r2.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r0.xyz, r0.xyzx, r1.wwww  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                  mul r1.xyz, r1.wwww, r1.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 168
                else 
                  mov r2.xyz, l(0,0,0,0)  // ambient<0: 0f,1: 0f,2: 0f>
                  mov r0.xyz, l(0,0,0,0)  // diffuse<0: 0f,1: 0f,2: 0f>
                  mov r1.xyz, l(0,0,0,0)  // spec<0: 0f,1: 0f,2: 0f>
                endif 
                
                #line 77 "D:\Data\Books\Book IV\Code\Chapter 7\Lighting\FX\Lighting.fx"
                mov r2.xyz, r2.xyzx  // A<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r0.xyz, r0.xyzx  // D<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r1.xyz, r1.xyzx  // S<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r2.xyz, r2.xyzx, r5.xyzx  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r6.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r7.xyzx  // spec<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r2.xyzx
                add r0.xyz, r1.xyzx, r0.xyzx  // litColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 85
                mov r0.w, cb1[13].w  // litColor<3>
                mov o0.xyz, r0.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r0.w  // PS<3>
                ret 
                // Approximately 161 instruction slots used
                            
            };
        }

    }

}

